{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n\n  function cmp(a, b) {\n    return a.line - b.line || a.ch - b.ch;\n  }\n\n  var nameStartChar = \"A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\n  var nameChar = nameStartChar + \"-:.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\n  var xmlTagStart = new RegExp(\"<(/?)([\" + nameStartChar + \"][\" + nameChar + \"]*)\", \"g\");\n\n  function Iter(cm, line, ch, range) {\n    this.line = line;\n    this.ch = ch;\n    this.cm = cm;\n    this.text = cm.getLine(line);\n    this.min = range ? Math.max(range.from, cm.firstLine()) : cm.firstLine();\n    this.max = range ? Math.min(range.to - 1, cm.lastLine()) : cm.lastLine();\n  }\n\n  function tagAt(iter, ch) {\n    var type = iter.cm.getTokenTypeAt(Pos(iter.line, ch));\n    return type && /\\btag\\b/.test(type);\n  }\n\n  function nextLine(iter) {\n    if (iter.line >= iter.max) return;\n    iter.ch = 0;\n    iter.text = iter.cm.getLine(++iter.line);\n    return true;\n  }\n\n  function prevLine(iter) {\n    if (iter.line <= iter.min) return;\n    iter.text = iter.cm.getLine(--iter.line);\n    iter.ch = iter.text.length;\n    return true;\n  }\n\n  function toTagEnd(iter) {\n    for (;;) {\n      var gt = iter.text.indexOf(\">\", iter.ch);\n\n      if (gt == -1) {\n        if (nextLine(iter)) continue;else return;\n      }\n\n      if (!tagAt(iter, gt + 1)) {\n        iter.ch = gt + 1;\n        continue;\n      }\n\n      var lastSlash = iter.text.lastIndexOf(\"/\", gt);\n      var selfClose = lastSlash > -1 && !/\\S/.test(iter.text.slice(lastSlash + 1, gt));\n      iter.ch = gt + 1;\n      return selfClose ? \"selfClose\" : \"regular\";\n    }\n  }\n\n  function toTagStart(iter) {\n    for (;;) {\n      var lt = iter.ch ? iter.text.lastIndexOf(\"<\", iter.ch - 1) : -1;\n\n      if (lt == -1) {\n        if (prevLine(iter)) continue;else return;\n      }\n\n      if (!tagAt(iter, lt + 1)) {\n        iter.ch = lt;\n        continue;\n      }\n\n      xmlTagStart.lastIndex = lt;\n      iter.ch = lt;\n      var match = xmlTagStart.exec(iter.text);\n      if (match && match.index == lt) return match;\n    }\n  }\n\n  function toNextTag(iter) {\n    for (;;) {\n      xmlTagStart.lastIndex = iter.ch;\n      var found = xmlTagStart.exec(iter.text);\n\n      if (!found) {\n        if (nextLine(iter)) continue;else return;\n      }\n\n      if (!tagAt(iter, found.index + 1)) {\n        iter.ch = found.index + 1;\n        continue;\n      }\n\n      iter.ch = found.index + found[0].length;\n      return found;\n    }\n  }\n\n  function toPrevTag(iter) {\n    for (;;) {\n      var gt = iter.ch ? iter.text.lastIndexOf(\">\", iter.ch - 1) : -1;\n\n      if (gt == -1) {\n        if (prevLine(iter)) continue;else return;\n      }\n\n      if (!tagAt(iter, gt + 1)) {\n        iter.ch = gt;\n        continue;\n      }\n\n      var lastSlash = iter.text.lastIndexOf(\"/\", gt);\n      var selfClose = lastSlash > -1 && !/\\S/.test(iter.text.slice(lastSlash + 1, gt));\n      iter.ch = gt + 1;\n      return selfClose ? \"selfClose\" : \"regular\";\n    }\n  }\n\n  function findMatchingClose(iter, tag) {\n    var stack = [];\n\n    for (;;) {\n      var next = toNextTag(iter),\n          end,\n          startLine = iter.line,\n          startCh = iter.ch - (next ? next[0].length : 0);\n      if (!next || !(end = toTagEnd(iter))) return;\n      if (end == \"selfClose\") continue;\n\n      if (next[1]) {\n        // closing tag\n        for (var i = stack.length - 1; i >= 0; --i) {\n          if (stack[i] == next[2]) {\n            stack.length = i;\n            break;\n          }\n        }\n\n        if (i < 0 && (!tag || tag == next[2])) return {\n          tag: next[2],\n          from: Pos(startLine, startCh),\n          to: Pos(iter.line, iter.ch)\n        };\n      } else {\n        // opening tag\n        stack.push(next[2]);\n      }\n    }\n  }\n\n  function findMatchingOpen(iter, tag) {\n    var stack = [];\n\n    for (;;) {\n      var prev = toPrevTag(iter);\n      if (!prev) return;\n\n      if (prev == \"selfClose\") {\n        toTagStart(iter);\n        continue;\n      }\n\n      var endLine = iter.line,\n          endCh = iter.ch;\n      var start = toTagStart(iter);\n      if (!start) return;\n\n      if (start[1]) {\n        // closing tag\n        stack.push(start[2]);\n      } else {\n        // opening tag\n        for (var i = stack.length - 1; i >= 0; --i) {\n          if (stack[i] == start[2]) {\n            stack.length = i;\n            break;\n          }\n        }\n\n        if (i < 0 && (!tag || tag == start[2])) return {\n          tag: start[2],\n          from: Pos(iter.line, iter.ch),\n          to: Pos(endLine, endCh)\n        };\n      }\n    }\n  }\n\n  CodeMirror.registerHelper(\"fold\", \"xml\", function (cm, start) {\n    var iter = new Iter(cm, start.line, 0);\n\n    for (;;) {\n      var openTag = toNextTag(iter);\n      if (!openTag || iter.line != start.line) return;\n      var end = toTagEnd(iter);\n      if (!end) return;\n\n      if (!openTag[1] && end != \"selfClose\") {\n        var startPos = Pos(iter.line, iter.ch);\n        var endPos = findMatchingClose(iter, openTag[2]);\n        return endPos && cmp(endPos.from, startPos) > 0 ? {\n          from: startPos,\n          to: endPos.from\n        } : null;\n      }\n    }\n  });\n\n  CodeMirror.findMatchingTag = function (cm, pos, range) {\n    var iter = new Iter(cm, pos.line, pos.ch, range);\n    if (iter.text.indexOf(\">\") == -1 && iter.text.indexOf(\"<\") == -1) return;\n    var end = toTagEnd(iter),\n        to = end && Pos(iter.line, iter.ch);\n    var start = end && toTagStart(iter);\n    if (!end || !start || cmp(iter, pos) > 0) return;\n    var here = {\n      from: Pos(iter.line, iter.ch),\n      to: to,\n      tag: start[2]\n    };\n    if (end == \"selfClose\") return {\n      open: here,\n      close: null,\n      at: \"open\"\n    };\n\n    if (start[1]) {\n      // closing tag\n      return {\n        open: findMatchingOpen(iter, start[2]),\n        close: here,\n        at: \"close\"\n      };\n    } else {\n      // opening tag\n      iter = new Iter(cm, to.line, to.ch, range);\n      return {\n        open: here,\n        close: findMatchingClose(iter, start[2]),\n        at: \"open\"\n      };\n    }\n  };\n\n  CodeMirror.findEnclosingTag = function (cm, pos, range, tag) {\n    var iter = new Iter(cm, pos.line, pos.ch, range);\n\n    for (;;) {\n      var open = findMatchingOpen(iter, tag);\n      if (!open) break;\n      var forward = new Iter(cm, pos.line, pos.ch, range);\n      var close = findMatchingClose(forward, open.tag);\n      if (close) return {\n        open: open,\n        close: close\n      };\n    }\n  }; // Used by addon/edit/closetag.js\n\n\n  CodeMirror.scanForClosingTag = function (cm, pos, name, end) {\n    var iter = new Iter(cm, pos.line, pos.ch, end ? {\n      from: 0,\n      to: end\n    } : null);\n    return findMatchingClose(iter, name);\n  };\n});","map":{"version":3,"sources":["/home/junaid/All Projects work/full stack web development/ResumeProjects/realtime-code-editor/node_modules/codemirror/addon/fold/xml-fold.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","Pos","cmp","a","b","line","ch","nameStartChar","nameChar","xmlTagStart","RegExp","Iter","cm","range","text","getLine","min","Math","max","from","firstLine","to","lastLine","tagAt","iter","type","getTokenTypeAt","test","nextLine","prevLine","length","toTagEnd","gt","indexOf","lastSlash","lastIndexOf","selfClose","slice","toTagStart","lt","lastIndex","match","exec","index","toNextTag","found","toPrevTag","findMatchingClose","tag","stack","next","end","startLine","startCh","i","push","findMatchingOpen","prev","endLine","endCh","start","registerHelper","openTag","startPos","endPos","findMatchingTag","pos","here","open","close","at","findEnclosingTag","forward","scanForClosingTag","name"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n  function cmp(a, b) { return a.line - b.line || a.ch - b.ch; }\n\n  var nameStartChar = \"A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\n  var nameChar = nameStartChar + \"\\-\\:\\.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\n  var xmlTagStart = new RegExp(\"<(/?)([\" + nameStartChar + \"][\" + nameChar + \"]*)\", \"g\");\n\n  function Iter(cm, line, ch, range) {\n    this.line = line; this.ch = ch;\n    this.cm = cm; this.text = cm.getLine(line);\n    this.min = range ? Math.max(range.from, cm.firstLine()) : cm.firstLine();\n    this.max = range ? Math.min(range.to - 1, cm.lastLine()) : cm.lastLine();\n  }\n\n  function tagAt(iter, ch) {\n    var type = iter.cm.getTokenTypeAt(Pos(iter.line, ch));\n    return type && /\\btag\\b/.test(type);\n  }\n\n  function nextLine(iter) {\n    if (iter.line >= iter.max) return;\n    iter.ch = 0;\n    iter.text = iter.cm.getLine(++iter.line);\n    return true;\n  }\n  function prevLine(iter) {\n    if (iter.line <= iter.min) return;\n    iter.text = iter.cm.getLine(--iter.line);\n    iter.ch = iter.text.length;\n    return true;\n  }\n\n  function toTagEnd(iter) {\n    for (;;) {\n      var gt = iter.text.indexOf(\">\", iter.ch);\n      if (gt == -1) { if (nextLine(iter)) continue; else return; }\n      if (!tagAt(iter, gt + 1)) { iter.ch = gt + 1; continue; }\n      var lastSlash = iter.text.lastIndexOf(\"/\", gt);\n      var selfClose = lastSlash > -1 && !/\\S/.test(iter.text.slice(lastSlash + 1, gt));\n      iter.ch = gt + 1;\n      return selfClose ? \"selfClose\" : \"regular\";\n    }\n  }\n  function toTagStart(iter) {\n    for (;;) {\n      var lt = iter.ch ? iter.text.lastIndexOf(\"<\", iter.ch - 1) : -1;\n      if (lt == -1) { if (prevLine(iter)) continue; else return; }\n      if (!tagAt(iter, lt + 1)) { iter.ch = lt; continue; }\n      xmlTagStart.lastIndex = lt;\n      iter.ch = lt;\n      var match = xmlTagStart.exec(iter.text);\n      if (match && match.index == lt) return match;\n    }\n  }\n\n  function toNextTag(iter) {\n    for (;;) {\n      xmlTagStart.lastIndex = iter.ch;\n      var found = xmlTagStart.exec(iter.text);\n      if (!found) { if (nextLine(iter)) continue; else return; }\n      if (!tagAt(iter, found.index + 1)) { iter.ch = found.index + 1; continue; }\n      iter.ch = found.index + found[0].length;\n      return found;\n    }\n  }\n  function toPrevTag(iter) {\n    for (;;) {\n      var gt = iter.ch ? iter.text.lastIndexOf(\">\", iter.ch - 1) : -1;\n      if (gt == -1) { if (prevLine(iter)) continue; else return; }\n      if (!tagAt(iter, gt + 1)) { iter.ch = gt; continue; }\n      var lastSlash = iter.text.lastIndexOf(\"/\", gt);\n      var selfClose = lastSlash > -1 && !/\\S/.test(iter.text.slice(lastSlash + 1, gt));\n      iter.ch = gt + 1;\n      return selfClose ? \"selfClose\" : \"regular\";\n    }\n  }\n\n  function findMatchingClose(iter, tag) {\n    var stack = [];\n    for (;;) {\n      var next = toNextTag(iter), end, startLine = iter.line, startCh = iter.ch - (next ? next[0].length : 0);\n      if (!next || !(end = toTagEnd(iter))) return;\n      if (end == \"selfClose\") continue;\n      if (next[1]) { // closing tag\n        for (var i = stack.length - 1; i >= 0; --i) if (stack[i] == next[2]) {\n          stack.length = i;\n          break;\n        }\n        if (i < 0 && (!tag || tag == next[2])) return {\n          tag: next[2],\n          from: Pos(startLine, startCh),\n          to: Pos(iter.line, iter.ch)\n        };\n      } else { // opening tag\n        stack.push(next[2]);\n      }\n    }\n  }\n  function findMatchingOpen(iter, tag) {\n    var stack = [];\n    for (;;) {\n      var prev = toPrevTag(iter);\n      if (!prev) return;\n      if (prev == \"selfClose\") { toTagStart(iter); continue; }\n      var endLine = iter.line, endCh = iter.ch;\n      var start = toTagStart(iter);\n      if (!start) return;\n      if (start[1]) { // closing tag\n        stack.push(start[2]);\n      } else { // opening tag\n        for (var i = stack.length - 1; i >= 0; --i) if (stack[i] == start[2]) {\n          stack.length = i;\n          break;\n        }\n        if (i < 0 && (!tag || tag == start[2])) return {\n          tag: start[2],\n          from: Pos(iter.line, iter.ch),\n          to: Pos(endLine, endCh)\n        };\n      }\n    }\n  }\n\n  CodeMirror.registerHelper(\"fold\", \"xml\", function(cm, start) {\n    var iter = new Iter(cm, start.line, 0);\n    for (;;) {\n      var openTag = toNextTag(iter)\n      if (!openTag || iter.line != start.line) return\n      var end = toTagEnd(iter)\n      if (!end) return\n      if (!openTag[1] && end != \"selfClose\") {\n        var startPos = Pos(iter.line, iter.ch);\n        var endPos = findMatchingClose(iter, openTag[2]);\n        return endPos && cmp(endPos.from, startPos) > 0 ? {from: startPos, to: endPos.from} : null\n      }\n    }\n  });\n  CodeMirror.findMatchingTag = function(cm, pos, range) {\n    var iter = new Iter(cm, pos.line, pos.ch, range);\n    if (iter.text.indexOf(\">\") == -1 && iter.text.indexOf(\"<\") == -1) return;\n    var end = toTagEnd(iter), to = end && Pos(iter.line, iter.ch);\n    var start = end && toTagStart(iter);\n    if (!end || !start || cmp(iter, pos) > 0) return;\n    var here = {from: Pos(iter.line, iter.ch), to: to, tag: start[2]};\n    if (end == \"selfClose\") return {open: here, close: null, at: \"open\"};\n\n    if (start[1]) { // closing tag\n      return {open: findMatchingOpen(iter, start[2]), close: here, at: \"close\"};\n    } else { // opening tag\n      iter = new Iter(cm, to.line, to.ch, range);\n      return {open: here, close: findMatchingClose(iter, start[2]), at: \"open\"};\n    }\n  };\n\n  CodeMirror.findEnclosingTag = function(cm, pos, range, tag) {\n    var iter = new Iter(cm, pos.line, pos.ch, range);\n    for (;;) {\n      var open = findMatchingOpen(iter, tag);\n      if (!open) break;\n      var forward = new Iter(cm, pos.line, pos.ch, range);\n      var close = findMatchingClose(forward, open.tag);\n      if (close) return {open: open, close: close};\n    }\n  };\n\n  // Used by addon/edit/closetag.js\n  CodeMirror.scanForClosingTag = function(cm, pos, name, end) {\n    var iter = new Iter(cm, pos.line, pos.ch, end ? {from: 0, to: end} : null);\n    return findMatchingClose(iter, name);\n  };\n});\n"]},"metadata":{},"sourceType":"script"}