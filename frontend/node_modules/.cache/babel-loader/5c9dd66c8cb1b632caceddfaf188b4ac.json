{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _indexOfInstanceProperty from \"core-js-pure/stable/instance/index-of.js\";\nimport _mapInstanceProperty from \"core-js-pure/stable/instance/map.js\";\nimport _reduceInstanceProperty from \"core-js-pure/stable/instance/reduce.js\";\nimport _parseFloat from \"core-js-pure/stable/parse-float.js\";\nimport _sliceInstanceProperty from \"core-js-pure/stable/instance/slice.js\";\nimport _filterInstanceProperty from \"core-js-pure/stable/instance/filter.js\";\nimport retina from 'is-retina';\nvar IS_RETINA = retina();\nexport function fetch(url, successCb, errorCb) {\n  var request = new XMLHttpRequest();\n\n  request.onreadystatechange = function () {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        var data = JSON.parse(request.responseText);\n        successCb(data);\n      } else {\n        errorCb(request.status);\n      }\n    }\n  };\n\n  request.open('GET', url, true);\n  request.send();\n}\nexport function fetchJSONP(url, successCb, errorCb) {\n  var callbackName = 'jsonp_cb_' + Math.round(100000 * Math.random());\n  var script = document.createElement('script');\n  script.src = url + (_indexOfInstanceProperty(url).call(url, '?') >= 0 ? '&' : '?') + 'callback=' + callbackName;\n  document.body.appendChild(script);\n\n  script.onerror = function () {\n    errorCb();\n  };\n\n  window[callbackName] = function (data) {\n    delete window[callbackName];\n    document.body.removeChild(script);\n    successCb(data);\n  };\n}\nexport var defaultColors = ['#d73d32', '#7e3794', '#4285f4', '#67ae3f', '#d61a7f', '#ff4080']; // https://regex101.com/r/YEsPER/1\n// https://developer.mozilla.org/en-US/docs/Web/CSS/length\n\nvar reSize = /^([-+]?(?:\\d+(?:\\.\\d+)?|\\.\\d+))([a-z]{2,4}|%)?$/; // https://en.wikipedia.org/wiki/Linear_congruential_generator\n\nfunction _stringAsciiPRNG(value, m) {\n  var _context; // Xn+1 = (a * Xn + c) % m\n  // 0 < a < m\n  // 0 <= c < m\n  // 0 <= X0 < m\n\n\n  var charCodes = _mapInstanceProperty(_context = _toConsumableArray(value)).call(_context, function (letter) {\n    return letter.charCodeAt(0);\n  });\n\n  var len = charCodes.length;\n  var a = len % (m - 1) + 1;\n  var c = _reduceInstanceProperty(charCodes).call(charCodes, function (current, next) {\n    return current + next;\n  }) % m;\n  var random = charCodes[0] % m;\n\n  for (var i = 0; i < len; i++) {\n    random = (a * random + c) % m;\n  }\n\n  return random;\n}\n\nexport function getRandomColor(value) {\n  var colors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultColors; // if no value is passed, always return transparent color otherwise\n  // a rerender would show a new color which would will\n  // give strange effects when an interface is loading\n  // and gets rerendered a few consequent times\n\n  if (!value) return 'transparent'; // value based random color index\n  // the reason we don't just use a random number is to make sure that\n  // a certain value will always get the same color assigned given\n  // a fixed set of colors\n\n  var colorIndex = _stringAsciiPRNG(value, colors.length);\n\n  return colors[colorIndex];\n}\nexport function parseSize(size) {\n  size = '' + size;\n\n  var _ref = reSize.exec(size) || [],\n      _ref2 = _slicedToArray(_ref, 3),\n      _ref2$ = _ref2[1],\n      value = _ref2$ === void 0 ? 0 : _ref2$,\n      _ref2$2 = _ref2[2],\n      unit = _ref2$2 === void 0 ? 'px' : _ref2$2;\n\n  return {\n    value: _parseFloat(value),\n    str: value + unit,\n    unit: unit\n  };\n}\n/**\n * Calculate absolute size in pixels we want for the images\n * that get requested from the various sources. They don't\n * understand relative sizes like `em` or `vww`.  We select\n * a fixed size of 512px when we can't detect the true pixel size.\n */\n\nexport function getImageSize(size) {\n  size = parseSize(size);\n  if (isNaN(size.value)) // invalid size, use fallback\n    size = 512;else if (size.unit === 'px') // px are good, use them\n    size = size.value;else if (size.value === 0) // relative 0 === absolute 0\n    size = 0;else // anything else is unknown, use fallback\n    size = 512;\n  if (IS_RETINA) size = size * 2;\n  return size;\n}\nexport function defaultInitials(name, _ref3) {\n  var _context2, _context3, _context4;\n\n  var maxInitials = _ref3.maxInitials;\n  return _sliceInstanceProperty(_context2 = _filterInstanceProperty(_context3 = _mapInstanceProperty(_context4 = name.split(/\\s/)).call(_context4, function (part) {\n    return part.substring(0, 1).toUpperCase();\n  })).call(_context3, function (v) {\n    return !!v;\n  })).call(_context2, 0, maxInitials).join('').toUpperCase();\n}\n/**\n * Grouped timeouts reduce the amount of timeouts trigged\n * by grouping multiple handlers into a single setTimeout call.\n *\n * This reduces accuracy of the timeout but will be less expensive\n * when multiple avatar have been loaded into view.\n */\n\nvar timeoutGroups = {};\nexport function setGroupedTimeout(fn, ttl) {\n  if (timeoutGroups[ttl]) {\n    timeoutGroups[ttl].push(fn);\n    return;\n  }\n\n  var callbacks = timeoutGroups[ttl] = [fn];\n  setTimeout(function () {\n    delete timeoutGroups[ttl];\n    callbacks.forEach(function (cb) {\n      return cb();\n    });\n  }, ttl);\n}","map":{"version":3,"sources":["/home/junaid/full stack web development/MERN Projects/realtime-code-editor-main (1)/realtime-code-editor-main/node_modules/react-avatar/es/utils.js"],"names":["_slicedToArray","_toConsumableArray","_indexOfInstanceProperty","_mapInstanceProperty","_reduceInstanceProperty","_parseFloat","_sliceInstanceProperty","_filterInstanceProperty","retina","IS_RETINA","fetch","url","successCb","errorCb","request","XMLHttpRequest","onreadystatechange","readyState","status","data","JSON","parse","responseText","open","send","fetchJSONP","callbackName","Math","round","random","script","document","createElement","src","call","body","appendChild","onerror","window","removeChild","defaultColors","reSize","_stringAsciiPRNG","value","m","_context","charCodes","letter","charCodeAt","len","length","a","c","current","next","i","getRandomColor","colors","arguments","undefined","colorIndex","parseSize","size","_ref","exec","_ref2","_ref2$","_ref2$2","unit","str","getImageSize","isNaN","defaultInitials","name","_ref3","_context2","_context3","_context4","maxInitials","split","part","substring","toUpperCase","v","join","timeoutGroups","setGroupedTimeout","fn","ttl","push","callbacks","setTimeout","forEach","cb"],"mappings":"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","sourcesContent":["'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _indexOfInstanceProperty from \"core-js-pure/stable/instance/index-of.js\";\nimport _mapInstanceProperty from \"core-js-pure/stable/instance/map.js\";\nimport _reduceInstanceProperty from \"core-js-pure/stable/instance/reduce.js\";\nimport _parseFloat from \"core-js-pure/stable/parse-float.js\";\nimport _sliceInstanceProperty from \"core-js-pure/stable/instance/slice.js\";\nimport _filterInstanceProperty from \"core-js-pure/stable/instance/filter.js\";\nimport retina from 'is-retina';\nvar IS_RETINA = retina();\nexport function fetch(url, successCb, errorCb) {\n  var request = new XMLHttpRequest();\n\n  request.onreadystatechange = function () {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        var data = JSON.parse(request.responseText);\n        successCb(data);\n      } else {\n        errorCb(request.status);\n      }\n    }\n  };\n\n  request.open('GET', url, true);\n  request.send();\n}\nexport function fetchJSONP(url, successCb, errorCb) {\n  var callbackName = 'jsonp_cb_' + Math.round(100000 * Math.random());\n  var script = document.createElement('script');\n  script.src = url + (_indexOfInstanceProperty(url).call(url, '?') >= 0 ? '&' : '?') + 'callback=' + callbackName;\n  document.body.appendChild(script);\n\n  script.onerror = function () {\n    errorCb();\n  };\n\n  window[callbackName] = function (data) {\n    delete window[callbackName];\n    document.body.removeChild(script);\n    successCb(data);\n  };\n}\nexport var defaultColors = ['#d73d32', '#7e3794', '#4285f4', '#67ae3f', '#d61a7f', '#ff4080']; // https://regex101.com/r/YEsPER/1\n// https://developer.mozilla.org/en-US/docs/Web/CSS/length\n\nvar reSize = /^([-+]?(?:\\d+(?:\\.\\d+)?|\\.\\d+))([a-z]{2,4}|%)?$/; // https://en.wikipedia.org/wiki/Linear_congruential_generator\n\nfunction _stringAsciiPRNG(value, m) {\n  var _context;\n\n  // Xn+1 = (a * Xn + c) % m\n  // 0 < a < m\n  // 0 <= c < m\n  // 0 <= X0 < m\n  var charCodes = _mapInstanceProperty(_context = _toConsumableArray(value)).call(_context, function (letter) {\n    return letter.charCodeAt(0);\n  });\n\n  var len = charCodes.length;\n  var a = len % (m - 1) + 1;\n  var c = _reduceInstanceProperty(charCodes).call(charCodes, function (current, next) {\n    return current + next;\n  }) % m;\n  var random = charCodes[0] % m;\n\n  for (var i = 0; i < len; i++) {\n    random = (a * random + c) % m;\n  }\n\n  return random;\n}\n\nexport function getRandomColor(value) {\n  var colors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultColors;\n  // if no value is passed, always return transparent color otherwise\n  // a rerender would show a new color which would will\n  // give strange effects when an interface is loading\n  // and gets rerendered a few consequent times\n  if (!value) return 'transparent'; // value based random color index\n  // the reason we don't just use a random number is to make sure that\n  // a certain value will always get the same color assigned given\n  // a fixed set of colors\n\n  var colorIndex = _stringAsciiPRNG(value, colors.length);\n\n  return colors[colorIndex];\n}\nexport function parseSize(size) {\n  size = '' + size;\n\n  var _ref = reSize.exec(size) || [],\n      _ref2 = _slicedToArray(_ref, 3),\n      _ref2$ = _ref2[1],\n      value = _ref2$ === void 0 ? 0 : _ref2$,\n      _ref2$2 = _ref2[2],\n      unit = _ref2$2 === void 0 ? 'px' : _ref2$2;\n\n  return {\n    value: _parseFloat(value),\n    str: value + unit,\n    unit: unit\n  };\n}\n/**\n * Calculate absolute size in pixels we want for the images\n * that get requested from the various sources. They don't\n * understand relative sizes like `em` or `vww`.  We select\n * a fixed size of 512px when we can't detect the true pixel size.\n */\n\nexport function getImageSize(size) {\n  size = parseSize(size);\n  if (isNaN(size.value)) // invalid size, use fallback\n    size = 512;else if (size.unit === 'px') // px are good, use them\n    size = size.value;else if (size.value === 0) // relative 0 === absolute 0\n    size = 0;else // anything else is unknown, use fallback\n    size = 512;\n  if (IS_RETINA) size = size * 2;\n  return size;\n}\nexport function defaultInitials(name, _ref3) {\n  var _context2, _context3, _context4;\n\n  var maxInitials = _ref3.maxInitials;\n  return _sliceInstanceProperty(_context2 = _filterInstanceProperty(_context3 = _mapInstanceProperty(_context4 = name.split(/\\s/)).call(_context4, function (part) {\n    return part.substring(0, 1).toUpperCase();\n  })).call(_context3, function (v) {\n    return !!v;\n  })).call(_context2, 0, maxInitials).join('').toUpperCase();\n}\n/**\n * Grouped timeouts reduce the amount of timeouts trigged\n * by grouping multiple handlers into a single setTimeout call.\n *\n * This reduces accuracy of the timeout but will be less expensive\n * when multiple avatar have been loaded into view.\n */\n\nvar timeoutGroups = {};\nexport function setGroupedTimeout(fn, ttl) {\n  if (timeoutGroups[ttl]) {\n    timeoutGroups[ttl].push(fn);\n    return;\n  }\n\n  var callbacks = timeoutGroups[ttl] = [fn];\n  setTimeout(function () {\n    delete timeoutGroups[ttl];\n    callbacks.forEach(function (cb) {\n      return cb();\n    });\n  }, ttl);\n}"]},"metadata":{},"sourceType":"module"}