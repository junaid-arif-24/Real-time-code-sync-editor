{"ast":null,"code":"import _asyncToGenerator from\"/home/junaid/full stack web development/ResumeProjects/realtime-code-editor/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/junaid/full stack web development/ResumeProjects/realtime-code-editor/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/junaid/full stack web development/ResumeProjects/realtime-code-editor/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useRef,useEffect}from'react';import toast from'react-hot-toast';import ACTIONS from'../Actions';import Client from'../components/Client';import Editor from'../components/Editor';import{initSocket}from'../socket';import{useLocation,useNavigate,Navigate,useParams}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditorPage=function EditorPage(){var socketRef=useRef(null);var codeRef=useRef(null);var location=useLocation();var _useParams=useParams(),roomId=_useParams.roomId;var reactNavigator=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),clients=_useState2[0],setClients=_useState2[1];useEffect(function(){var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _location$state;var handleErrors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:handleErrors=function _handleErrors(e){console.log('socket error',e);toast.error('Socket connection failed, try again later.');reactNavigator('/');};_context.next=3;return initSocket();case 3:socketRef.current=_context.sent;socketRef.current.on('connect_error',function(err){return handleErrors(err);});socketRef.current.on('connect_failed',function(err){return handleErrors(err);});socketRef.current.emit(ACTIONS.JOIN,{roomId:roomId,username:(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.username});// Listening for joined event\nsocketRef.current.on(ACTIONS.JOINED,function(_ref2){var _location$state2;var clients=_ref2.clients,username=_ref2.username,socketId=_ref2.socketId;if(username!==((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.username)){toast.success(\"\".concat(username,\" joined the room.\"));console.log(\"\".concat(username,\" joined\"));}setClients(clients);socketRef.current.emit(ACTIONS.SYNC_CODE,{code:codeRef.current,socketId:socketId});});// Listening for disconnected\nsocketRef.current.on(ACTIONS.DISCONNECTED,function(_ref3){var socketId=_ref3.socketId,username=_ref3.username;toast.success(\"\".concat(username,\" left the room.\"));setClients(function(prev){return prev.filter(function(client){return client.socketId!==socketId;});});});case 9:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();init();return function(){socketRef.current.off(ACTIONS.JOINED);socketRef.current.off(ACTIONS.DISCONNECTED);socketRef.current.disconnect();};},[]);function copyRoomId(){return _copyRoomId.apply(this,arguments);}function _copyRoomId(){_copyRoomId=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return navigator.clipboard.writeText(roomId);case 3:toast.success('Room ID has been copied to your clipboard');_context2.next=10;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);toast.error('Could not copy the Room ID');console.error(_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,6]]);}));return _copyRoomId.apply(this,arguments);}function leaveRoom(){reactNavigator('/');}if(!location.state){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"mainWrap\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"aside\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"asideInner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{className:\"logoImage\",src:\"/code-sync.png\",alt:\"logo\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Connected\"}),/*#__PURE__*/_jsx(\"div\",{className:\"clientsList\",children:clients.map(function(client){return/*#__PURE__*/_jsx(Client,{username:client.username},client.socketId);})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn copyBtn\",onClick:copyRoomId,children:\"Copy ROOM ID\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn leaveBtn\",onClick:leaveRoom,children:\"Leave\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"editorWrap\",children:/*#__PURE__*/_jsx(Editor,{socketRef:socketRef,roomId:roomId,onCodeChange:function onCodeChange(code){codeRef.current=code;}})})]});};export default EditorPage;","map":{"version":3,"sources":["/home/junaid/full stack web development/ResumeProjects/realtime-code-editor/src/pages/EditorPage.js"],"names":["React","useState","useRef","useEffect","toast","ACTIONS","Client","Editor","initSocket","useLocation","useNavigate","Navigate","useParams","EditorPage","socketRef","codeRef","location","roomId","reactNavigator","clients","setClients","init","handleErrors","e","console","log","error","current","on","err","emit","JOIN","username","state","JOINED","socketId","success","SYNC_CODE","code","DISCONNECTED","prev","filter","client","off","disconnect","copyRoomId","navigator","clipboard","writeText","leaveRoom","map"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport ACTIONS from '../Actions';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport {\n    useLocation,\n    useNavigate,\n    Navigate,\n    useParams,\n} from 'react-router-dom';\n\nconst EditorPage = () => {\n    const socketRef = useRef(null);\n    const codeRef = useRef(null);\n    const location = useLocation();\n    const { roomId } = useParams();\n    const reactNavigator = useNavigate();\n    const [clients, setClients] = useState([]);\n\n    useEffect(() => {\n        const init = async () => {\n            socketRef.current = await initSocket();\n            socketRef.current.on('connect_error', (err) => handleErrors(err));\n            socketRef.current.on('connect_failed', (err) => handleErrors(err));\n\n            function handleErrors(e) {\n                console.log('socket error', e);\n                toast.error('Socket connection failed, try again later.');\n                reactNavigator('/');\n            }\n\n            socketRef.current.emit(ACTIONS.JOIN, {\n                roomId,\n                username: location.state?.username,\n            });\n\n            // Listening for joined event\n            socketRef.current.on(\n                ACTIONS.JOINED,\n                ({ clients, username, socketId }) => {\n                    if (username !== location.state?.username) {\n                        toast.success(`${username} joined the room.`);\n                        console.log(`${username} joined`);\n                    }\n                    setClients(clients);\n                    socketRef.current.emit(ACTIONS.SYNC_CODE, {\n                        code: codeRef.current,\n                        socketId,\n                    });\n                }\n            );\n\n            // Listening for disconnected\n            socketRef.current.on(\n                ACTIONS.DISCONNECTED,\n                ({ socketId, username }) => {\n                    toast.success(`${username} left the room.`);\n                    setClients((prev) => {\n                        return prev.filter(\n                            (client) => client.socketId !== socketId\n                        );\n                    });\n                }\n            );\n        };\n        init();\n        return () => {\n            \n            socketRef.current.off(ACTIONS.JOINED);\n            socketRef.current.off(ACTIONS.DISCONNECTED);\n\t    socketRef.current.disconnect();\n        };\n    }, []);\n\n    async function copyRoomId() {\n        try {\n            await navigator.clipboard.writeText(roomId);\n            toast.success('Room ID has been copied to your clipboard');\n        } catch (err) {\n            toast.error('Could not copy the Room ID');\n            console.error(err);\n        }\n    }\n\n    function leaveRoom() {\n        reactNavigator('/');\n    }\n\n    if (!location.state) {\n        return <Navigate to=\"/\" />;\n    }\n\n    return (\n        <div className=\"mainWrap\">\n            <div className=\"aside\">\n                <div className=\"asideInner\">\n                    <div className=\"logo\">\n                        <img\n                            className=\"logoImage\"\n                            src=\"/code-sync.png\"\n                            alt=\"logo\"\n                        />\n                    </div>\n                    <h3>Connected</h3>\n                    <div className=\"clientsList\">\n                        {clients.map((client) => (\n                            <Client\n                                key={client.socketId}\n                                username={client.username}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <button className=\"btn copyBtn\" onClick={copyRoomId}>\n                    Copy ROOM ID\n                </button>\n                <button className=\"btn leaveBtn\" onClick={leaveRoom}>\n                    Leave\n                </button>\n            </div>\n            <div className=\"editorWrap\">\n                <Editor\n                    socketRef={socketRef}\n                    roomId={roomId}\n                    onCodeChange={(code) => {\n                        codeRef.current = code;\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EditorPage;\n"]},"metadata":{},"sourceType":"module"}